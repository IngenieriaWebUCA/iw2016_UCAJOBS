// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.iw.ucajobs.domain;

import es.iw.ucajobs.domain.Roles;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Roles_Roo_Finder {
    
    public static Long Roles.countFindRolesesByNombreEquals(String nombre) {
        if (nombre == null || nombre.length() == 0) throw new IllegalArgumentException("The nombre argument is required");
        EntityManager em = Roles.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Roles AS o WHERE o.nombre = :nombre", Long.class);
        q.setParameter("nombre", nombre);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Roles> Roles.findRolesesByNombreEquals(String nombre) {
        if (nombre == null || nombre.length() == 0) throw new IllegalArgumentException("The nombre argument is required");
        EntityManager em = Roles.entityManager();
        TypedQuery<Roles> q = em.createQuery("SELECT o FROM Roles AS o WHERE o.nombre = :nombre", Roles.class);
        q.setParameter("nombre", nombre);
        return q;
    }
    
    public static TypedQuery<Roles> Roles.findRolesesByNombreEquals(String nombre, String sortFieldName, String sortOrder) {
        if (nombre == null || nombre.length() == 0) throw new IllegalArgumentException("The nombre argument is required");
        EntityManager em = Roles.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Roles AS o WHERE o.nombre = :nombre");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<Roles> q = em.createQuery(queryBuilder.toString(), Roles.class);
        q.setParameter("nombre", nombre);
        return q;
    }
    
}
